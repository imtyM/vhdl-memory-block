// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II 64-Bit Version 13.0 (Build Build 232 06/12/2013)
// Created on Sun Apr 02 11:46:10 2017

processRead processRead_inst
(
	.process_nibble_read(process_nibble_read_sig) ,	// input  process_nibble_read_sig
	.read_address(read_address_sig) ,	// input [3:0] read_address_sig
	.nibble_in(nibble_in_sig) ,	// input  nibble_in_sig
	.nibble_data(nibble_data_sig) ,	// input [3:0] nibble_data_sig
	.R_W(R_W_sig) ,	// output  R_W_sig
	.process_read_LED(process_read_LED_sig) ,	// output  process_read_LED_sig
	.active_read(active_read_sig) ,	// output  active_read_sig
	.nibbleAdd3(nibbleAdd3_sig) ,	// output  nibbleAdd3_sig
	.nibbleAdd2(nibbleAdd2_sig) ,	// output  nibbleAdd2_sig
	.nibbleAdd1(nibbleAdd1_sig) ,	// output  nibbleAdd1_sig
	.nibbleAdd0(nibbleAdd0_sig) 	// output  nibbleAdd0_sig
);

